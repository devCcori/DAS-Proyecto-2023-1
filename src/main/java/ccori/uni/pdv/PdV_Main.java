/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ccori.uni.pdv;

/**
 *
 * @author devCcori
 */

import javax.swing.JFrame;
import javax.swing.JComboBox;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import java.math.BigDecimal;

import java.sql.SQLException;

import java.text.SimpleDateFormat;

import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import java.util.stream.DoubleStream;

import javax.swing.ComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

import ccori.uni.dbUtils.pdvUtils;
import ccori.uni.data.Recetas;

public class PdV_Main extends javax.swing.JFrame {

    /**
     * Creates new form PdV_Main
     */
    public PdV_Main() {
        initComponents();
        actualizarHora();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                
        addWindowListener(new WindowAdapter(){
            @Override
            public void windowClosing(WindowEvent e){
                dispose();
            }
        });

        //Crea un cell listerner para la tabla jTable1 que se encarga de actualizar los totales de la venta cada vez que se modifica la tabla jTable1 :
        tProductos.getModel().addTableModelListener((e) -> {
            int column = e.getColumn();
            if(column == 1 || column == 2){
                actualizarSubtotales();
                actualizarTotales();
                }
            if(column == 3){
                actualizarTotales();
                }
            }
        );
        try{
            Integer cantVentas = pdvUtils.getRowCount() + 1;
            txtCodPedido.setText(cantVentas.toString());
        }catch(SQLException e){
            txtCodPedido.setText("0Error");
            System.out.println("Error al obtener el numero de ventas");
        }

        cbComprobante.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boleta", "Factura" }));

        cbPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Efectivo","Tarjeta" , "Yape", "Plin"}));

        txtCajero.setEditable(false);
        txtCodPedido.setEditable(false);

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtCajero = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDNICliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCodPedido = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        labelHora = new javax.swing.JLabel();
        cbComprobante = new javax.swing.JComboBox<>();
        cbPago = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        btnLess = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tProductos = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtImporte = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtIGV = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        btnGenerar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ID Trabajador");

        jLabel2.setText("DNI Cliente");

        jLabel3.setText("Tipo de comprobante");

        jLabel6.setText("Tipo de pago");

        jLabel4.setText("Codigo de pedido");

        labelHora.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        labelHora.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelHora.setText("jLabel5");

        cbComprobante.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setText("Productos");

        btnLess.setText("-");
        btnLess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLessActionPerformed(evt);
            }
        });

        btnAdd.setText("+");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        tProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Cantidad", "Precio Unitario", "Subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tProductos);

        jLabel5.setText("IMPORTE");

        txtImporte.setText(" ");

        jLabel9.setText("IGV");

        txtIGV.setText(" ");

        jLabel11.setText("TOTAL");

        txtTotal.setText(" ");

        btnCancelar.setText("CANCELAR PAGO");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnGenerar.setText("GENERAR PAGO");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(cbPago, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(cbComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(txtCajero, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(txtDNICliente, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnLess, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtCodPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelHora, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel9)
                            .addComponent(jLabel5))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTotal))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtImporte)
                                    .addComponent(txtIGV, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(44, 44, 44))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCancelar)
                        .addGap(157, 157, 157))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(567, Short.MAX_VALUE)
                    .addComponent(btnGenerar)
                    .addGap(34, 34, 34)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCajero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtCodPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtDNICliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cbComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(labelHora, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(btnAdd)
                    .addComponent(btnLess))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtImporte))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtIGV))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtTotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(btnCancelar)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(701, Short.MAX_VALUE)
                    .addComponent(btnGenerar)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        //obten la data de la tabla y guardala en un String[][4]:
        String[][] data = new String[tProductos.getRowCount()][4];
        for (int i = 0; i < tProductos.getRowCount(); i++) {
            for (int j = 0; j < 4; j++) {
                Object value = tProductos.getValueAt(i, j);
                if (value instanceof Double) {
                    data[i][j] = String.valueOf((Double) value);
                } else if (value instanceof Integer) {
                    data[i][j] = String.valueOf((Integer) value);
                } else {
                    data[i][j] = String.valueOf(value);
                }
            }
        }
        
        String total = "0";
        if(txtTotal.getText().length() > 0){
            total = txtTotal.getText();
        }

        String seleccion = (String) cbPago.getSelectedItem();
        try {
            pdvUtils.insertarVenta(txtCodPedido.getText(), txtCajero.getText(), total, seleccion, txtDNICliente.getText());
        } catch (Exception ex) {
            System.out.println("Error al insertar venta");
            System.out.println(ex.getMessage());
        }

        try {
            pdvUtils.insertarVentaDetalle(txtCodPedido.getText(), data);
        } catch (Exception ex) {
            System.err.println("Error al insertar venta detalle");
            System.err.println(ex.getMessage());
        }

        try {
            pdvUtils.subirVenta(txtCodPedido.getText());
        } catch (Exception e) {
            System.err.println("Error al subir venta");
            System.err.println(e.getMessage());
        }

        try{
            TicketPreview tp = new TicketPreview(txtCajero.getText(), txtDNICliente.getText(),txtCodPedido.getText(),data,total);
            tp.setVisible(true);
            tp.addWindowListener(new WindowAdapter(){
                @Override
                public void windowClosed(WindowEvent we) {
                    dispose();
                }
            });
        }catch(Exception ex){
            System.out.println("Error al generar ticket");
            System.out.println(ex.getMessage());
        }

    }//GEN-LAST:event_btnGenerarActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        Recetas re = new Recetas();
        re.setVisible(true);

        re.addWindowListener(new WindowAdapter(){
            @Override
            public void windowClosed(WindowEvent we) {
                Object[] rowData = re.getSelectedRowData();
                BigDecimal bigDecimalValue = (BigDecimal) rowData[0];
                double doubleValue = bigDecimalValue.doubleValue();

                Object[] depurado;
                depurado = new Object[] {
                    rowData[1],
                    1.0,
                    doubleValue,
                    doubleValue
                };

                DefaultTableModel model = (DefaultTableModel) tProductos.getModel();
                model.addRow(depurado);
                actualizarTotales();
            }
        });
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnLessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLessActionPerformed
        if (tProductos.getSelectedRow() != -1) {
            DefaultTableModel model = (DefaultTableModel) tProductos.getModel();
            model.removeRow(tProductos.getSelectedRow());
            actualizarTotales();
        }
    }//GEN-LAST:event_btnLessActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PdV_Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PdV_Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnLess;
    private javax.swing.JComboBox<String> cbComprobante;
    private javax.swing.JComboBox<String> cbPago;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelHora;
    private javax.swing.JTable tProductos;
    private javax.swing.JTextField txtCajero;
    private javax.swing.JTextField txtCodPedido;
    private javax.swing.JTextField txtDNICliente;
    private javax.swing.JLabel txtIGV;
    private javax.swing.JLabel txtImporte;
    private javax.swing.JLabel txtTotal;
    // End of variables declaration//GEN-END:variables

    //define una funcion actualizarTotales() que actualize el valor del txtTotal:
    private void actualizarTotales() {
        double total = 0;
        for (int i = 0; i < tProductos.getRowCount(); i++) {
            Object val = tProductos.getValueAt(i, 3);
            total += (double) val;
        }
        String importe = String.format("%.2f", total * 0.82);
        String igv = String.format("%.2f", total * 0.18);
        String ntotal = String.format("%.2f", total);

        txtImporte.setText(importe);
        txtIGV.setText(igv);
        txtTotal.setText(ntotal);
    }

    //define una funcion actualizarSubtotales() que actualize el valor del jTable(i,3):
    private void actualizarSubtotales() {
        for (int i = 0; i < tProductos.getRowCount(); i++) {
            Object value1 = tProductos.getValueAt(i, 1);
            Object value2 = tProductos.getValueAt(i, 2);

            double valor1 = 0.0;
            double valor2 = 0.0;

            if (value1 instanceof Double) {
                valor1 = (double) value1;
            } else if (value1 instanceof Integer) {
                valor1 = (int) value1;
            } else {
                JOptionPane.showMessageDialog(null, "El valor no es numérico");
            }

            if (value2 instanceof Double) {
                valor2 = (double) value2;
            } else if (value2 instanceof Integer) {
                valor2 = (int) value2;
            } else {
                JOptionPane.showMessageDialog(null, "El valor no es numérico");
            }

            double subtotal = valor2 * valor1;

            tProductos.setValueAt(subtotal, i, 3);
        }
    }
        
    //define una funcion actualizarHora() que actualize el labelHora cada segundo:
    public final void actualizarHora() {
        Timer timer = new Timer("HoraActualizada");//Crea un timer y le asigna un nombre
        TimerTask task = new TimerTask() {//Crea una tarea para el timer
            @Override
            public void run() {
                labelHora.setText(new SimpleDateFormat("dd/MM/yyyy HH:mm:ss").format(new Date()));
            }
        };
        timer.schedule(task, 0, 1000);//Asigna la tarea al timer y lo ejecuta cada 1000 milisegundos
    } 

    public JTextField getjTextField1() {
        return txtCajero;
    }
}
